<org.apache.pdfbox.multipdf.Overlay: java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)>/org.apache.pdfbox.multipdf.Overlay.createContentStreamList/0	<org.apache.pdfbox.multipdf.Overlay: java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)>/item#_325
<org.apache.pdfbox.multipdf.Overlay: java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)>/org.apache.pdfbox.multipdf.Overlay.createContentStreamList/1	<org.apache.pdfbox.multipdf.Overlay: java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)>/$r9
<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)>/org.apache.pdfbox.pdmodel.PDPageTree.get/0	<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)>/kid#_282
<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)>/org.apache.pdfbox.pdmodel.PDPageTree.get/1	<org.apache.pdfbox.pdmodel.PDPageTree: org.apache.pdfbox.cos.COSDictionary get(int,org.apache.pdfbox.cos.COSDictionary,int)>/kid#_282
<org.apache.pdfbox.pdmodel.PDPageTree: boolean findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)>/org.apache.pdfbox.pdmodel.PDPageTree.findPage/0	<org.apache.pdfbox.pdmodel.PDPageTree: boolean findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)>/kid#_346
<java.awt.Container: void reparentTraverse(java.awt.peer.ContainerPeer,java.awt.Container)>/java.awt.Container.reparentTraverse/0	<java.awt.Container: void reparentTraverse(java.awt.peer.ContainerPeer,java.awt.Container)>/$r1
<org.apache.pdfbox.pdfparser.COSParser: int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary)>/org.apache.pdfbox.pdfparser.COSParser.checkPagesDictionary/0	<org.apache.pdfbox.pdfparser.COSParser: int checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary)>/kidDictionary#_2341
<org.apache.pdfbox.multipdf.PDFMergerUtility: void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)>/org.apache.pdfbox.multipdf.PDFMergerUtility.updatePageReferences/0	<org.apache.pdfbox.multipdf.PDFMergerUtility: void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)>/$r1
<org.apache.pdfbox.pdmodel.PDPageTree$PageIterator: void enqueueKids(org.apache.pdfbox.cos.COSDictionary)>/org.apache.pdfbox.pdmodel.PDPageTree$PageIterator.enqueueKids/0	<org.apache.pdfbox.pdmodel.PDPageTree$PageIterator: void enqueueKids(org.apache.pdfbox.cos.COSDictionary)>/kid#_176
<java.awt.Window: void updateChildFocusableWindowState(java.awt.Window)>/java.awt.Window.updateChildFocusableWindowState/0	<java.awt.Window: void updateChildFocusableWindowState(java.awt.Window)>/l2#_1076
<org.apache.pdfbox.cos.COSDictionary: java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)>/org.apache.pdfbox.cos.COSDictionary.getDictionaryString/0	<org.apache.pdfbox.cos.COSDictionary: java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)>/$r23
<org.apache.pdfbox.cos.COSDictionary: java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)>/org.apache.pdfbox.cos.COSDictionary.getDictionaryString/1	<org.apache.pdfbox.cos.COSDictionary: java.lang.String getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)>/$r3
<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge/0	<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/$r39
<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge/0	<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/$r40
<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge/1	<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/$r36
<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge/1	<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/$r38
<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge/2	<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/$r34
<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge/3	<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/$r14
<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/org.apache.pdfbox.multipdf.PDFCloneUtility.cloneMerge/3	<org.apache.pdfbox.multipdf.PDFCloneUtility: void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)>/entry#21#_222
<org.apache.pdfbox.pdfwriter.COSWriter: java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)>/org.apache.pdfbox.pdfwriter.COSWriter.visitFromDictionary/0	<org.apache.pdfbox.pdfwriter.COSWriter: java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)>/dict#_996
<com.sun.imageio.plugins.common.PaletteBuilder: int findPaletteEntry(com.sun.imageio.plugins.common.PaletteBuilder$ColorNode,int,byte[],byte[],byte[])>/com.sun.imageio.plugins.common.PaletteBuilder.findPaletteEntry/0	<com.sun.imageio.plugins.common.PaletteBuilder: int findPaletteEntry(com.sun.imageio.plugins.common.PaletteBuilder$ColorNode,int,byte[],byte[],byte[])>/$r3
<com.sun.imageio.plugins.common.PaletteBuilder: com.sun.imageio.plugins.common.PaletteBuilder$ColorNode freeTree(com.sun.imageio.plugins.common.PaletteBuilder$ColorNode)>/com.sun.imageio.plugins.common.PaletteBuilder.freeTree/0	<com.sun.imageio.plugins.common.PaletteBuilder: com.sun.imageio.plugins.common.PaletteBuilder$ColorNode freeTree(com.sun.imageio.plugins.common.PaletteBuilder$ColorNode)>/$r1
<javax.swing.text.DefaultStyledDocument$ElementBuffer: javax.swing.text.Element clone(javax.swing.text.Element,javax.swing.text.Element)>/javax.swing.text.DefaultStyledDocument$ElementBuffer.clone/0	<javax.swing.text.DefaultStyledDocument$ElementBuffer: javax.swing.text.Element clone(javax.swing.text.Element,javax.swing.text.Element)>/$r3
<javax.swing.text.DefaultStyledDocument$ElementBuffer: javax.swing.text.Element cloneAsNecessary(javax.swing.text.Element,javax.swing.text.Element,int,int)>/javax.swing.text.DefaultStyledDocument$ElementBuffer.cloneAsNecessary/0	<javax.swing.text.DefaultStyledDocument$ElementBuffer: javax.swing.text.Element cloneAsNecessary(javax.swing.text.Element,javax.swing.text.Element,int,int)>/l9#_2149
<javax.swing.text.DefaultStyledDocument$ElementBuffer: javax.swing.text.Element recreateFracturedElement(javax.swing.text.Element,javax.swing.text.Element)>/javax.swing.text.DefaultStyledDocument$ElementBuffer.recreateFracturedElement/0	<javax.swing.text.DefaultStyledDocument$ElementBuffer: javax.swing.text.Element recreateFracturedElement(javax.swing.text.Element,javax.swing.text.Element)>/$r3
